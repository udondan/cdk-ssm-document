import {
  Annotations,
  aws_iam,
  aws_lambda,
  CustomResource,
  Duration,
  ITaggable,
  Lazy,
  Stack,
  StackProps,
  TagManager,
  TagType,
} from 'aws-cdk-lib';
import { Construct } from 'constructs';
import yaml = require('js-yaml');
import path = require('path');

const resourceType = 'Custom::SSM-Document';
const ID = `CFN::Resource::${resourceType}`;
const createdByTag = 'CreatedByCfnCustomResource';
const cleanID = ID.replace(/:+/g, '-');
const lambdaTimeout = 3; // minutes

/**
 * An SSM document parameter
 */
export interface DocumentParameter {
  /**
   *  Allowed values include the following: String, StringList, Boolean, Integer, MapList, and StringMap. To view examples of each type, see https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-plugins.html#top-level-properties-type
   */
  readonly type: string;

  /**
   * A description of the parameter
   */
  readonly description: string;

  /**
   * The default value of the parameter or a reference to a parameter in Parameter Store
   */
  readonly default?: any;

  /**
   * Allowed values for the parameter
   */
  readonly allowedValues?: string[];

  /**
   * The regular expression the parameter must match
   */
  readonly allowedPattern?: string;

  /**
   *  Used to display either a textfield or a textarea in the AWS console. textfield is a single-line text box. textarea is a multi-line text area
   */
  readonly displayType?: string;

  /**
   * The minimum number of items allowed
   */
  readonly minItems?: number;

  /**
   * The maximum number of items allowed
   */
  readonly maxItems?: number;

  /**
   * The minimum number of parameter characters allowed
   */
  readonly minChars?: number;

  /**
   * The maximum number of parameter characters allowed
   */
  readonly maxChars?: number;
}

/**
 * Steps include one or more actions, an optional precondition, a unique name of the action, and inputs (parameters) for those actions.
 *
 * For more information about documents, including information about creating documents and the differences between schema versions, see https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-plugins.html
 */
export interface DocumentMainStep {
  /**
   * name is any user-defined name for a step.
   */
  readonly name?: string;

  /**
   * The name of the action the step is to run
   */
  readonly action?: string;

  /**
   * The properties specific to the action.
   */
  readonly inputs?: any;

  /**
   * With schema version 2.2 or later, you can use the precondition parameter to specify the target operating system for each plugin or to validate input parameters you've defined in your SSM document.
   * https://docs.aws.amazon.com/systems-manager/latest/userguide/document-schemas-features.html
   */
  readonly precondition?: any;

  /**
   * (Schema version 0.3 only) Data generated by the execution of this document that can be used in other processes. 
   * https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-doc-syntax.html
   */
  readonly outputs?: any;

  /**
   * The number of times the step should be retried in case of failure. 
   * https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-actions.html#automation-common
   */
  readonly maxAttempts?: number;

  /**
   * The timeout value for the step. If the timeout is reached and the value of maxAttempts is greater than 1, then the step isn't considered to have timed out until all retries have been attempted.
   * https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-actions.html#automation-common
   */
  readonly timeoutSeconds?: number;

  /**
   * Designates a step as critical for the successful completion of the Automation. If a step with this designation fails, then Automation reports the final status of the Automation as Failed. This property is only evaluated if you explicitly define it in your step.
   * https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-actions.html#automation-common
   */
  readonly isCritical?: boolean;

  /**
   * This option stops an automation at the end of a specific step. The automation stops if the step failed or succeeded.
   * https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-actions.html#automation-common
   */
  readonly isEnd?: boolean;

  /**
   * Indicates which step the automation should go to in the event that a user cancels the automation. Automation runs the cancellation workflow for a maximum of two minutes.
   * https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-actions.html#automation-common
   */
  readonly onCancel?: string;

  /**
   * Indicates whether the automation should stop, continue, or go to a different step on failure. 
   * https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-actions.html#automation-common
   */
  readonly onFailure?: string;

  /**
   * Specifies which step in an automation to process next after successfully completing a step.
   * https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-actions.html#automation-common
   */
  readonly nextStep?: string;

  /**
   * In theory should allow any property/value combinations but due to issues in jsii it
   * only works in typescript/javascript. 
   * 
   * https://github.com/aws/jsii/issues/2928
   */
  [key: string]: any;
}

/**
 * An SSM document attachment source
 */
export interface AttachmentSource {
  /**
   * The key of a key-value pair that identifies the location of an attachment to a document.
   */
  readonly key?: 'SourceUrl' | 'S3FileUrl' | 'AttachmentReference';

  /**
   * The name of the document attachment file.
   */
  readonly name?: string;

  /**
   * The value of a key-value pair that identifies the location of an attachment to a document. The format for Value depends on the type of key you specify.
   *
   * For the key SourceUrl, the value is an S3 bucket location. For example:
   * "Values": [ "s3://doc-example-bucket/my-folder" ]
   * For the key S3FileUrl, the value is a file in an S3 bucket. For example:
   * "Values": [ "s3://doc-example-bucket/my-folder/my-file.py" ]
   *   For the key AttachmentReference, the value is constructed from the name of another SSM document in your account, a version number of that document, and a file attached to that document version that you want to reuse. For example:
   * "Values": [ "MyOtherDocument/3/my-other-file.py" ]
   * However, if the SSM document is shared with you from another account, the full SSM document ARN must be specified instead of the document name only. For example:
   * "Values": [ "arn:aws:ssm:us-east-2:111122223333:document/OtherAccountDocument/3/their-file.py" ]
   * Type: Array of strings
   * Array Members: Fixed number of 1 item.
   */
  readonly values?: string[];
}

/**
 * The content of the SSM document. The syntax of your document is defined by the schema version used to create it.
 *
 * This module only supports schema version 2.2
 *
 * For details see https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-doc-syntax.html
 */
export interface DocumentContent {
  /**
   * The schema version to use. Currently only version 2.2 is supported
   */
  readonly schemaVersion: string;

  /**
   * Information you provide to describe the purpose of the document
   */
  readonly description?: string;

  /**
   * The ARN of the role that allows Automation to perform the actions on your behalf.
   */
  readonly assumeRole?: string;

  /**
   * An object that can include multiple steps (plugins). Steps include one or more actions, an optional precondition, a unique name of the action, and inputs (parameters) for those actions.
   *
   * For more information about documents, including information about creating documents and the differences between schema versions, see https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-plugins.html
   */
  readonly mainSteps: DocumentMainStep[];

  /**
   * The parameters the document accepts
   */
  readonly parameters?: {
    [key: string]: DocumentParameter;
  };
}

/**
 * Definition of the SSM document
 */
export interface DocumentProps extends StackProps {
  /**
   * Defines if the default version should be updated to the latest version on document updates
   *
   * @default true
   */
  readonly updateDefaultVersion?: boolean;

  /**
   * Name of the document
   *
   * The name must be between 3 and 128 characters. Valid characters are a-z, A-Z, 0-9, and _, -, and . only
   */
  readonly name: string;

  /**
   * Document type based on the service that you want to use
   *
   * @default Command
   */
  readonly documentType?: string;

  /**
   * Types of resources the document can run on. For example, `/AWS::EC2::Instance` or `/` for all resource types
   *
   * @default /
   */
  readonly targetType?: string;

  /**
   * Content of the SSM document. Can be passed as string or as object
   */
  readonly content: string | DocumentContent;

  /**
   * A list of key-value pairs that describe attachments to a version of a document.
   */
  readonly attachments?: AttachmentSource[];

  /**
   * An optional field specifying the version of the artifact you are creating with the document. For example, "Release 12, Update 6". This value is unique across all versions of a document, and can't be changed.
   */
  readonly versionName?: string;
}

/**
 * An SSM document
 */
export class Document extends Construct implements ITaggable {
  /**
   * Name of the document
   */
  public readonly name: string = '';

  /**
   * Resource tags
   */
  public readonly tags: TagManager;

  /**
   * The lambda function that is created
   */
  public readonly lambda: aws_lambda.IFunction;

  /**
   * Defines a new SSM document
   */
  constructor(scope: Construct, id: string, props: DocumentProps) {
    super(scope, id);

    this.tags = new TagManager(TagType.MAP, 'Custom::SSM-Document');
    this.tags.setTag(createdByTag, ID);

    const stack = Stack.of(this).stackName;
    this.lambda = this.ensureLambda();
    const name = this.fixDocumentName(props.name);

    if (name.length < 3 || name.length > 128) {
      Annotations.of(this).addError(
        `SSM Document name ${name} is invalid. The name must be between 3 and 128 characters.`
      );
      return;
    }

    let content = props.content;

    if (typeof content === 'string') {
      content = yaml.safeLoad(content) as DocumentContent;
    }

    const document = new CustomResource(this, `SSM-Document-${name}`, {
      serviceToken: this.lambda.functionArn,
      resourceType: resourceType,
      properties: {
        updateDefaultVersion: props.updateDefaultVersion || true,
        name: name,
        content: content,
        documentType: props.documentType || 'Command',
        targetType: props.targetType || '/',
        attachments: props.attachments,
        versionName: props.versionName,
        StackName: stack,
        tags: Lazy.any({
          produce: () => this.tags.renderTags(),
        }),
      },
      pascalCaseProperties: true,
    });

    this.name = document.getAttString('Name');
  }

  private ensureLambda(): aws_lambda.Function {
    const stack = Stack.of(this);
    const constructName = 'SSM-Document-Manager-Lambda';
    const existing = stack.node.tryFindChild(constructName);
    if (existing) {
      return existing as aws_lambda.Function;
    }

    const policy = new aws_iam.ManagedPolicy(
      stack,
      'SSM-Document-Manager-Policy',
      {
        managedPolicyName: `${stack.stackName}-${cleanID}`,
        description: `Used by Lambda ${cleanID}, which is a custom CFN resource, managing SSM documents`,
        statements: [
          new aws_iam.PolicyStatement({
            actions: ['ssm:ListDocuments', 'ssm:ListTagsForResource'],
            resources: ['*'],
          }),
          new aws_iam.PolicyStatement({
            actions: ['ssm:AddTagsToResource', 'ssm:CreateDocument'],
            resources: ['*'],
            conditions: {
              StringLike: {
                'aws:RequestTag/CreatedByCfnCustomResource': ID,
              },
            },
          }),
          new aws_iam.PolicyStatement({
            actions: [
              'ssm:AddTagsToResource',
              'ssm:DeleteDocument',
              'ssm:DescribeDocument',
              'ssm:GetDocument',
              'ssm:ListDocumentVersions',
              'ssm:ModifyDocumentPermission',
              'ssm:RemoveTagsFromResource',
              'ssm:UpdateDocument',
              'ssm:UpdateDocumentDefaultVersion',
            ],
            resources: ['*'],
            conditions: {
              StringLike: {
                'ssm:ResourceTag/CreatedByCfnCustomResource': ID,
              },
            },
          }),
        ],
      }
    );

    const role = new aws_iam.Role(stack, 'SSM-Document-Manager-Role', {
      roleName: `${stack.stackName}-${cleanID}`,
      description: `Used by Lambda ${cleanID}, which is a custom CFN resource, managing SSM documents`,
      assumedBy: new aws_iam.ServicePrincipal('lambda.amazonaws.com'),
      managedPolicies: [
        policy,
        aws_iam.ManagedPolicy.fromAwsManagedPolicyName(
          'service-role/AWSLambdaBasicExecutionRole'
        ),
      ],
    });

    const fn = new aws_lambda.Function(stack, constructName, {
      functionName: `${stack.stackName}-${cleanID}`,
      role: role,
      description: 'Custom CFN resource: Manage SSM Documents',
      runtime: aws_lambda.Runtime.NODEJS_14_X,
      handler: 'index.handler',
      code: aws_lambda.Code.fromAsset(
        path.join(__dirname, '../lambda/code.zip')
      ),
      timeout: Duration.minutes(lambdaTimeout),
    });

    return fn;
  }

  private fixDocumentName(name: string): string {
    return name.replace(/[^a-zA-Z0-9_.-]+/g, '-');
  }
}
